Иногда есть потребность в реализациии логики вида: "Сделать исключяение для правила по понедельникам рабочих дней". 
Решил добавить возможность делать проверку на выходной день (вне зависимости от выпадающих праздников или просто субботы, воскресенья + перенесенные выходные).
В итоге нашел официальный ресурс «data.gov.ru» который даже имеет сносный REST-API для запроса актуальных данных. Как всегда API содержал ошибки (update: я оставил запрос на доработку на этом ресурсе и позже получил письмо, что все исправлено!!?! Не поверил, но и проверять не стал пока...), которые не позволили организовать полностью автоматическую проверку обновления файлов на данном ресурсе и их актуализацию с Reference Set в QRadar, но имеющиеся данные позволяют построить систему работающую целый год. Обновление данные раз в год в полуавтоматическом режиме (даже если придется переписать парсер при смене поставщика информации) считаю приемлемым.
В итоге теперь мы можем реализовывать правила вида:
1. Подозрительная активность в выходной день (например создание локального пользователя на контроллере домена);
2. Исключение для срабатывания правил в выходные дни.
При необходимости данную схему можно расширить до:
1. Первый рабочий день месяца.

Идея работы такая:
1. Все выходные дни записываем как номер дня от начала года в одномерный массив – Reference Set;
2. В правиле проверяем текущую дату конвертированную в день он начала года на вхождение в Reference Set созданный в п.1.

Файл с производственным календарем (скачанный с указанного сайта) с 1999 по 2025 во вложении (data_holidays.csv);
Сконвертированные данные на 2020, 2021 года (2020.csv, 2021.csv) – их нужно просто вставить в Reference Set «Holidays».
Скрипт на ruby для конвертации (Скрпит нужно положить рядом с файлом «data_holidays.csv». Первый параметр – год для конвертации. В итоге он создаст файл с данными в той же папке.)

Как встраивать данные проверки в правила (пример запроса с выводом только выходных дней):
SELECT
	DATEFORMAT(devicetime,'yyyy-MM-dd hh:mm'),
	*
FROM events
WHERE
	REFERENCESETCONTAINS('Holidays', DOUBLE(DATEFORMAT(devicetime, 'DD')))
LAST 30 DAYS
